// LoginController.java
package controller;

import dao.UserDAO;
import javafx.fxml.FXML;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.scene.control.Alert;
import javafx.stage.Stage;
import model.User;

public class LoginController {
    @FXML
    private TextField usernameField;

    @FXML
    private PasswordField passwordField;

    public void handleLogin() {
        String username = usernameField.getText();
        String password = passwordField.getText();

        try {
            UserDAO userDAO = new UserDAO();
            User user = userDAO.authenticate(username, password);

            if (user != null) {
                if ("admin".equals(user.getRole())) {
                    SceneLoader.load("/view/AdminDashboard.fxml", "Admin Dashboard", (Stage) usernameField.getScene().getWindow());
                } else {
                    SceneLoader.load("/view/OperatorDashboard.fxml", "Operator Dashboard", (Stage) usernameField.getScene().getWindow());
                }
            } else {
                showAlert("Invalid username or password.");
            }
        } catch (Exception e) {
            showAlert("Error: " + e.getMessage());
        }
    }

    private void showAlert(String message) {
        Alert alert = new Alert(Alert.AlertType.ERROR);
        alert.setContentText(message);
        alert.showAndWait();
    }
}

// AdminDashboardController.java
package controller;

import javafx.fxml.FXML;
import javafx.stage.Stage;
import javafx.scene.control.Button;

public class AdminDashboardController {
    @FXML private Button companyButton;
    @FXML private Button operatorButton;
    @FXML private Button carButton;
    @FXML private Button availableCarsButton;

    @FXML
    public void initialize() {
        companyButton.setOnAction(e -> SceneLoader.load("/view/Companies.fxml", "Manage Companies", getStage()));
        operatorButton.setOnAction(e -> SceneLoader.load("/view/Operators.fxml", "Manage Operators", getStage()));
        carButton.setOnAction(e -> SceneLoader.load("/view/RegisterCar.fxml", "Register Car", getStage()));
        availableCarsButton.setOnAction(e -> SceneLoader.load("/view/AvailableCars.fxml", "Available Cars", getStage()));
    }

    private Stage getStage() {
        return (Stage) companyButton.getScene().getWindow();
    }
}

// OperatorDashboardController.java
package controller;

import javafx.fxml.FXML;
import javafx.stage.Stage;
import javafx.scene.control.Button;

public class OperatorDashboardController {
    @FXML private Button clientButton;
    @FXML private Button registerCarButton;
    @FXML private Button rentCarButton;
    @FXML private Button returnCarButton;
    @FXML private Button priceCalcButton;
    @FXML private Button historyButton;

    @FXML
    public void initialize() {
        clientButton.setOnAction(e -> SceneLoader.load("/view/Clients.fxml", "Manage Clients", getStage()));
        registerCarButton.setOnAction(e -> SceneLoader.load("/view/RegisterCar.fxml", "Register Car", getStage()));
        rentCarButton.setOnAction(e -> SceneLoader.load("/view/RentCar.fxml", "Rent Car", getStage()));
        returnCarButton.setOnAction(e -> SceneLoader.load("/view/ReturnCar.fxml", "Return Car", getStage()));
        priceCalcButton.setOnAction(e -> SceneLoader.load("/view/PriceCalculator.fxml", "Calculate Price", getStage()));
        historyButton.setOnAction(e -> SceneLoader.load("/view/RentalHistory.fxml", "Rental History", getStage()));
    }

    private Stage getStage() {
        return (Stage) clientButton.getScene().getWindow();
    }
}

// SceneLoader.java 
package controller;

import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.stage.Stage;

public class SceneLoader {
    public static void load(String fxmlPath, String title, Stage stage) {
        try {
            Parent root = FXMLLoader.load(SceneLoader.class.getResource(fxmlPath));
            stage.setTitle(title);
            stage.setScene(new Scene(root));
            stage.show();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
